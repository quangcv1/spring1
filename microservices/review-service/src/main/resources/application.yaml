server:
  port: 7003

# Strongly recommend to set this property to "none" in a production environment!

spring:
  r2dbc:
    url: r2dbc:pool:postgresql://127.0.0.1:5432/review_db
    username: review_db
    password: pwd
    pool:
      initial-size: 100
      max-size: 500
      max-idle-time: 30m
      validation-query: SELECT 1
#spring.datasource:
#  url: jdbc:postgresql://localhost:5432/review_db
#  username: review_db
#  password: pwd
#
#spring:
#  datasource:
#    hikari:
#      maximum-pool-size: 5
#      initialization-fail-timeout: 60000
#  jpa:
#    hibernate:
#      ddl-auto: update

spring.cloud.stream:
  defaultBinder: rabbit
  default.contentType: application/json
  bindings.input:
    destination: reviews
    group: reviewsGroup

spring.cloud.stream.bindings.input.consumer:
  maxAttempts: 3
  backOffInitialInterval: 500
  backOffMaxInterval: 1000
  backOffMultiplier: 2.0

spring.cloud.stream.rabbit.bindings.input.consumer:
  autoBindDlq: true
  republishToDlq: true

spring.cloud.stream.kafka.bindings.input.consumer:
  enableDlq: true

spring.cloud.stream.kafka.binder:
  brokers: 127.0.0.1
  defaultBrokerPort: 9092

spring.rabbitmq:
  host: 127.0.0.1
  port: 5672
  username: guest
  password: guest


logging:
  level:
    root: INFO
    vn.com.acb: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"

---
spring:
  profiles: docker
  datasource:
    url: jdbc:postgresql://postgres/review_db


server:
  port: 8080

spring.rabbitmq.host: rabbitmq

spring.cloud.stream.kafka.binder.brokers: kafka
